# -*- coding: utf-8 -*-
"""Preprocessing_Data_4111422042.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AH9ZQgDeObscJa0dOfrsPbGzAeRzVxyR

**Tugas Praktikum Data Mining â€“ Preprocessing**

**1. Memuat Data**

a. Melakukan Import Library
"""

import pandas as pd

"""b. Memuat Dataset ke dalam Dataframe"""

# Memuat Data
df = pd.read_csv('movie_dataset.csv')
df.head()

"""**2. Memeriksa Data**

a. Periksa Info Umum (tipe data dan missing value)
"""

# Memeriksa Data
print("\nInfo kolom & tipe data") # cek info umum
df.info()
print("\nJumlah missing value:") # cek missing value
print(df.isnull().sum())

"""Menampilkan Baris yang ada missing value nya"""

# Tampilkan baris yang mengandung minimal 1 missing value
print("\nContoh baris dengan missing value")
print(df[df.isnull().any(axis=1)])
# Kolom yang mengandung NaN
print("\nKolom yang mengandung NaN:")
print(df.columns[df.isnull().any()])

"""**3. Membersihkan Data**"""

# Membersihkan Data
# Hapus semua baris yang punya NaN
df.dropna(inplace=True)
# Reset index setelah drop
df.reset_index(drop=True, inplace=True)
print("Setelah hapus nilai NaN:", df.shape)

"""Atasi nilai yang tidak konsisten"""

# atasi nilai tidak konsisten
if 'color' in df.columns:
    df['color'] = df['color'].astype(str).str.lower().str.strip()
    print("\nUnique values kolom color setelah normalisasi:")
    print(df['color'].value_counts(dropna=False))

if 'country' in df.columns:
    df['country'] = df['country'].astype(str).str.lower().str.strip()
    print("\nUnique values kolom country setelah normalisasi:")
    print(df['country'].value_counts(dropna=False))

if 'language' in df.columns:
    df['language'] = df['language'].astype(str).str.lower().str.strip()
    print("\nUnique values kolom language setelah normalisasi:")
    print(df['language'].value_counts(dropna=False))

# Ganti nilai tidak standar
import numpy as np
df.replace(["N/A", "NA", "na", "n/a", "NaN"], np.nan, inplace=True)
print("Missing value setelah ganti 'N/A':")
print(df.isnull().sum())

#Hapus baris NaN (setelah penggantian "N/A")
df = df.dropna()

"""Mengatasi nilai negatif"""

#Mengatasi Nilai yang Negatif
df['duration'] = df['duration'].apply(lambda x: np.nan if x < 0 else x)
df['imdb_score'] = df['imdb_score'].apply(lambda x: np.nan if x < 0 else x)

#Hapus baris nilai negatif di budget atau gross
df = df[(df['budget'] >= 0) & (df['gross'] >= 0)]
df

"""**4. Transformasi Data**"""

# ubah tipe data
# Daftar kolom numeric di dataset
numeric_candidates = ["budget", "gross", "duration", "imdb_score", "movie_facebook_likes"]
# Konversi ke numeric
for col in numeric_candidates:
    if col in df.columns:
        df[col] = pd.to_numeric(df[col], errors="coerce")
if "duration" in df.columns:
    df["duration"] = df["duration"].astype("Int64")

print("Tipe data setelah konversi:")
print(df.dtypes)

"""Normalisasi teks"""

# Normalisasi teks
text_cols = ["color", "director_name", "movie_title", "language", "country", "actors", "genres"]
for col in text_cols:
    if col in df.columns:
        df[col] = df[col].astype(str).str.strip().str.lower() # ubah ke string, strip spasi, lalu lowercase

# cek nilai unik setelah normalisasi
if "color" in df.columns:
    print("Unique values kolom color setelah normalisasi:")
    print(df["color"].value_counts(dropna=False))
if "country" in df.columns:
    print("\nContoh unique country (lowercase):")
    print(df["country"].value_counts(dropna=False).head(20))

"""**5. Penyimpanan Data**"""

# Simpan hasil dataset akhir
df.to_csv("movie_dataset_cleaned.csv", index=False)
print("Dataset disimpan : 'movie_dataset_cleaned.csv'")